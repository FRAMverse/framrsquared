% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy.R
\name{copy_tamms}
\alias{copy_tamms}
\title{Copy TAMM for FRAM batch runs}
\usage{
copy_tamms(tamm_name, target_folder, run_id_vec, overwrite = FALSE)
}
\arguments{
\item{tamm_name}{TAMM file to copy, including file path. Character string}

\item{target_folder}{directory to put new batch TAMM files into. Character string}

\item{run_id_vec}{vector of run_ids (numeric or character), corresponding to run ids in a FRAM database.}

\item{overwrite}{If one or more files already exist in \code{target_folder} with names matching the combination of \code{tamm_name} and run ids, overwrite (\code{TRUE}) or leave those files untouched (\code{FALSE}). Defaults to \code{FALSE} for safety; recommend setting to \code{TRUE} to avoid confusion when iterating on work.}
}
\value{
invisibly returns logical vector of \code{file.copy()} success.
}
\description{
Preps a folder for batch running in the 'Run Multiple Runs' screen of the FRAM automation fork (https://github.com/FRAMverse/FRAM_automation), for use with the \code{advanced} approach to identify multiple runs. One TAMM file will be copied multiple times in the \code{target_folder} with suffixes that identify each of the run_ids. The "Use folder" button on the "Run Multiple Runs" screen can then use the target folder to set up large batch runs. Typically users should use \code{make_batch_runs()} instead (this first copies runs and then uses \code{copy_tamms} to create tamms that match the new runs).
}
\examples{
\dontrun{copy_tamms(tamm_name = "C:/TAMMs/Chin2020.xlsx", target_folder = "C:/Batch_run_5", run_id_vec = 10:20)}
}
